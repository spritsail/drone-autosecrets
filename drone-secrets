#!/bin/sh
set -e
set -o pipefail

if [ $# -lt 1 ]; then
    >&2 echo "Usage: $(basename $0) <repo e.g. spritsail/test>"
    exit 1
fi

REPO="$1"
IMAGE="${2:-$1}"

# Hacky fix to refresh remote repos
curl -X POST -H "Authorization: Bearer $DRONE_TOKEN" "$DRONE_SERVER/api/user/repos?all=true&flush=true" -fsSLo /dev/null
echo "[*] drone: updated repository list"

if drone repo add "$REPO" 2>&1; then
    echo "[*] drone: enabled repo '${REPO}'"
    NEWREPO="true"
fi

drone repo update --trusted "$REPO" || true
echo "[*] drone: set repo to trusted"

{ gopass spritsail/drone.spritsail.io/env; echo; } | \
    while read secret; do
        name="$(echo ${secret%%:*} | xargs)"
        value="$(echo ${secret#*:} | xargs)"
        drone secret add --name="$name" --value="$value" "$REPO" ||
            drone secret update --name="$name" --value="$value" "$REPO"
    done

if [ "$NEWREPO" = "true" ]; then
    docker pull tianon/true
    docker tag tianon/true "$IMAGE"
    docker push "$REPO"
fi


MICROBADGER_API="https://api.microbadger.com/v1/images"
MICROBADGER_TOKEN="$(curl -fsSL "$MICROBADGER_API/$IMAGE" | jq -r .WebhookURL | sed 's|^.*/||g')"

if [ -n "$MICROBADGER_TOKEN" ]; then
    drone secret add --name=microbadger_token --value="$MICROBADGER_TOKEN" "$REPO"
fi
